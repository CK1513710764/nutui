"use strict";(self.webpackChunkNutUI=self.webpackChunkNutUI||[]).push([[397],{"./src/components/AutoComplete/autoComplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ASimpleComplete:()=>ASimpleComplete,BCustomComplete:()=>BCustomComplete,CAjaxComplete:()=>CAjaxComplete,__namedExportsOrder:()=>__namedExportsOrder,default:()=>autoComplete_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),input=__webpack_require__("./src/components/Input/input.tsx"),icon=__webpack_require__("./src/components/Icon/icon.tsx"),transition=__webpack_require__("./src/components/Transition/transition.tsx");const hooks_useDebounce=function useDebounce(value,delay=300){const[debouncedValue,setDebouncedValue]=(0,react.useState)(value);return(0,react.useEffect)(()=>{const handler=window.setTimeout(()=>{setDebouncedValue(value)},delay);return()=>{clearTimeout(handler)}},[value,delay]),debouncedValue};var useClickOutside=__webpack_require__("./src/hooks/useClickOutside.tsx");const AutoComplete=props=>{const{fetchSuggestions,onSelect,onChange,value,renderOption,...restProps}=props,[inputValue,setInputValue]=(0,react.useState)(value),[suggestions,setSugestions]=(0,react.useState)([]),[loading,setLoading]=(0,react.useState)(!1),[showDropdown,setShowDropdown]=(0,react.useState)(!1),[highlightIndex,setHighlightIndex]=(0,react.useState)(-1),triggerSearch=(0,react.useRef)(!1),componentRef=(0,react.useRef)(null),debouncedValue=hooks_useDebounce(inputValue,300);(0,useClickOutside.A)(componentRef,()=>{setSugestions([])}),(0,react.useEffect)(()=>{if(debouncedValue&&triggerSearch.current){setSugestions([]);const results=fetchSuggestions(debouncedValue);results instanceof Promise?(setLoading(!0),results.then(data=>{setLoading(!1),setSugestions(data),data.length>0&&setShowDropdown(!0)})):(setSugestions(results),setShowDropdown(!0),results.length>0&&setShowDropdown(!0))}else setShowDropdown(!1);setHighlightIndex(-1)},[debouncedValue,fetchSuggestions]);const highlight=index=>{index<0&&(index=0),index>=suggestions.length&&(index=suggestions.length-1),setHighlightIndex(index)},handleSelect=item=>{setInputValue(item.value),setShowDropdown(!1),onSelect&&onSelect(item),triggerSearch.current=!1},renderTemplate=item=>renderOption?renderOption(item):item.value;return(0,jsx_runtime.jsxs)("div",{className:"viking-auto-complete",ref:componentRef,children:[(0,jsx_runtime.jsx)(input.A,{...restProps,value:inputValue,onChange:e=>{const value=e.target.value.trim();console.log("triggered the value",value),setInputValue(value),onChange&&onChange(value),triggerSearch.current=!0},onKeyDown:e=>{switch(e.keyCode){case 13:suggestions[highlightIndex]&&handleSelect(suggestions[highlightIndex]);break;case 38:highlight(highlightIndex-1);break;case 40:highlight(highlightIndex+1);break;case 27:setShowDropdown(!1)}}}),(0,jsx_runtime.jsx)(transition.A,{in:showDropdown||loading,animation:"zoom-in-top",timeout:300,onExited:()=>{setSugestions([])},children:(0,jsx_runtime.jsxs)("ul",{className:"viking-suggestion-list",children:[loading&&(0,jsx_runtime.jsx)("div",{className:"suggstions-loading-icon",children:(0,jsx_runtime.jsx)(icon.A,{icon:"spinner",spin:!0})}),suggestions.map((item,index)=>{const cnames=classnames_default()("suggestion-item",{"is-active":index===highlightIndex});return(0,jsx_runtime.jsx)("li",{className:cnames,onClick:()=>handleSelect(item),children:renderTemplate(item)},index)})]})})]})};AutoComplete.__docgenInfo={description:"输入框自动完成功能。当输入值需要自动完成时使用，支持同步和异步两种方式\n支持 Input 组件的所有属性 支持键盘事件选择\n### 引用方法\n\n~~~js\nimport { AutoComplete } from 'vikingship'\n~~~",methods:[],displayName:"AutoComplete",props:{fetchSuggestions:{required:!0,tsType:{name:"signature",type:"function",raw:"(\n  str: string,\n) => DataSourceType[] | Promise<DataSourceType[]>",signature:{arguments:[{type:{name:"string"},name:"str"}],return:{name:"union",raw:"DataSourceType[] | Promise<DataSourceType[]>",elements:[{name:"Array",elements:[{name:"intersection",raw:"T & DataSourceObject",elements:[{name:"T"},{name:"DataSourceObject"}]}],raw:"DataSourceType[]"},{name:"Promise",elements:[{name:"Array",elements:[{name:"intersection",raw:"T & DataSourceObject",elements:[{name:"T"},{name:"DataSourceObject"}]}],raw:"DataSourceType[]"}],raw:"Promise<DataSourceType[]>"}]}}},description:"返回输入建议的方法，可以拿到当前的输入，然后返回同步的数组或者是异步的 Promise\ntype DataSourceType<T = {}> = T & DataSourceObject"},onSelect:{required:!1,tsType:{name:"signature",type:"function",raw:"(item: DataSourceType) => void",signature:{arguments:[{type:{name:"intersection",raw:"T & DataSourceObject",elements:[{name:"T"},{name:"DataSourceObject"}]},name:"item"}],return:{name:"void"}}},description:"点击选中建议项时触发的回调"},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:"文本框发生改变的时候触发的事件"},renderOption:{required:!1,tsType:{name:"signature",type:"function",raw:"(item: DataSourceType) => ReactElement",signature:{arguments:[{type:{name:"intersection",raw:"T & DataSourceObject",elements:[{name:"T"},{name:"DataSourceObject"}]},name:"item"}],return:{name:"ReactElement"}}},description:""}},composes:["Omit"]};const autoComplete_stories={title:"AutoComplete 组件",component:AutoComplete,id:"AutoComplete",parameters:{docs:{source:{type:"code"}}}},ASimpleComplete={name:"1 基本的搜索",render:args=>{const lakers=["bradley","pope","caruso","cook","cousins","james","AD","green","howard","kuzma","McGee","rando"];return(0,jsx_runtime.jsx)(AutoComplete,{...args,fetchSuggestions:query=>lakers.filter(name=>name.includes(query)).map(name=>({value:name})),placeholder:"输入湖人队球员英文名试试"})}},BCustomComplete={name:"2 自定义搜索结果模版",args:{placeholder:"输入湖人队球员英文,自定义下拉模版"},render:args=>{const lakersWithNumber=[{value:"bradley",number:11},{value:"pope",number:1},{value:"caruso",number:4},{value:"cook",number:2},{value:"cousins",number:15},{value:"james",number:23},{value:"AD",number:3},{value:"green",number:14},{value:"howard",number:39},{value:"kuzma",number:0}];return(0,jsx_runtime.jsx)(AutoComplete,{...args,fetchSuggestions:query=>lakersWithNumber.filter(player=>player.value.includes(query)),renderOption:item=>{const itemWithNumber=item;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("b",{children:["名字: ",itemWithNumber.value]}),(0,jsx_runtime.jsxs)("span",{children:["球衣号码: ",itemWithNumber.number]})]})}})}},CAjaxComplete={name:"3 支持异步搜索",args:{placeholder:"输入 Github 用户名试试"},render:args=>(0,jsx_runtime.jsx)(AutoComplete,{...args,fetchSuggestions:query=>fetch(`https://api.github.com/search/users?q=${query}`).then(res=>res.json()).then(({items})=>items.slice(0,10).map(item=>({value:item.login,...item}))),renderOption:item=>{const itemWithGithub=item;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("b",{children:["Name: ",itemWithGithub.value]}),(0,jsx_runtime.jsxs)("span",{children:["url: ",itemWithGithub.url]})]})}})},__namedExportsOrder=["ASimpleComplete","BCustomComplete","CAjaxComplete"];ASimpleComplete.parameters={...ASimpleComplete.parameters,docs:{...ASimpleComplete.parameters?.docs,source:{originalSource:"{\n  name: '1 基本的搜索',\n  render: args => {\n    const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins', 'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando'];\n    const handleFetch = (query: string) => {\n      return lakers.filter(name => name.includes(query)).map(name => ({\n        value: name\n      }));\n    };\n    return <AutoComplete {...args} fetchSuggestions={handleFetch} placeholder=\"输入湖人队球员英文名试试\" />;\n  }\n}",...ASimpleComplete.parameters?.docs?.source}}},BCustomComplete.parameters={...BCustomComplete.parameters,docs:{...BCustomComplete.parameters?.docs,source:{originalSource:"{\n  name: '2 自定义搜索结果模版',\n  args: {\n    placeholder: '输入湖人队球员英文,自定义下拉模版'\n  },\n  render: args => {\n    // --- 所有旧的函数体逻辑都移动到这里 ---\n    const lakersWithNumber = [{\n      value: 'bradley',\n      number: 11\n    }, {\n      value: 'pope',\n      number: 1\n    }, {\n      value: 'caruso',\n      number: 4\n    }, {\n      value: 'cook',\n      number: 2\n    }, {\n      value: 'cousins',\n      number: 15\n    }, {\n      value: 'james',\n      number: 23\n    }, {\n      value: 'AD',\n      number: 3\n    }, {\n      value: 'green',\n      number: 14\n    }, {\n      value: 'howard',\n      number: 39\n    }, {\n      value: 'kuzma',\n      number: 0\n    }];\n    // 假设 DataSourceType 和 LakerPlayerProps 类型已在本文件中定义或导入\n    const handleFetch = (query: string) => {\n      return lakersWithNumber.filter(player => player.value.includes(query));\n    };\n    const renderOption = (item: DataSourceType) => {\n      const itemWithNumber = item as DataSourceType<LakerPlayerProps>;\n      return <>\r\n          <b>名字: {itemWithNumber.value}</b>\r\n          <span>球衣号码: {itemWithNumber.number}</span>\r\n        </>;\n    };\n    // --- 逻辑结束 ---\n\n    return <AutoComplete {...args} fetchSuggestions={handleFetch} renderOption={renderOption} />;\n  }\n}",...BCustomComplete.parameters?.docs?.source}}},CAjaxComplete.parameters={...CAjaxComplete.parameters,docs:{...CAjaxComplete.parameters?.docs,source:{originalSource:"{\n  name: '3 支持异步搜索',\n  args: {\n    placeholder: '输入 Github 用户名试试'\n  },\n  render: args => {\n    // --- 所有旧的函数体逻辑都移动到这里 ---\n    const handleFetch = (query: string) => {\n      return fetch(`https://api.github.com/search/users?q=${query}`).then(res => res.json()).then(({\n        items\n      }) => {\n        return items.slice(0, 10).map((item: any) => ({\n          value: item.login,\n          ...item\n        }));\n      });\n    };\n\n    // 假设 DataSourceType 和 GithubUserProps 类型已在本文件中定义或导入\n    const renderOption = (item: DataSourceType) => {\n      const itemWithGithub = item as DataSourceType<GithubUserProps>;\n      return <>\r\n          <b>Name: {itemWithGithub.value}</b>\r\n          <span>url: {itemWithGithub.url}</span>\r\n        </>;\n    };\n    // --- 逻辑结束 ---\n\n    return <AutoComplete {...args} fetchSuggestions={handleFetch} renderOption={renderOption} />;\n  }\n}",...CAjaxComplete.parameters?.docs?.source}}}},"./src/components/Icon/icon.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),classnames__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/classnames/index.js")),classnames__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__),_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@fortawesome/react-fontawesome/index.es.js");const Icon=props=>{const{className,theme,...restProps}=props,classes=classnames__WEBPACK_IMPORTED_MODULE_2___default()("viking-icon",className,{[`icon-${theme}`]:theme});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_3__.g,{className:classes,...restProps})},__WEBPACK_DEFAULT_EXPORT__=Icon;Icon.__docgenInfo={description:"提供了一套常用的图标集合 基于 react-fontawesome。\n\n支持 react-fontawesome的所有属性 可以在这里查询 https://github.com/FortAwesome/react-fontawesome#basic\n\n支持 fontawesome 所有 free-solid-icons，可以在这里查看所有图标 https://fontawesome.com/icons?d=gallery&s=solid&m=free\n### 引用方法\n\n~~~js\nimport { Icon } from 'vikingship'\n~~~",methods:[],displayName:"Icon",props:{theme:{required:!1,tsType:{name:"union",raw:"| 'primary'\n| 'secondary'\n| 'success'\n| 'info'\n| 'warning'\n| 'danger'\n| 'light'\n| 'dark'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'secondary'"},{name:"literal",value:"'success'"},{name:"literal",value:"'info'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'danger'"},{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"支持框架主题 根据主题显示不同的颜色"}},composes:["FontAwesomeIconProps"]}},"./src/components/Input/input.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,p:()=>Input});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),classnames__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__),_Icon_icon__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Icon/icon.tsx");const Input=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((props,ref)=>{const{disabled,size,icon,prepend,append,style,...restProps}=props,cnames=classnames__WEBPACK_IMPORTED_MODULE_2___default()("viking-input-wrapper",{[`input-size-${size}`]:size,"is-disabled":disabled,"input-group":prepend||append,"input-group-append":!!append,"input-group-prepend":!!prepend});var value;return"value"in props&&(delete restProps.defaultValue,restProps.value=null==(value=props.value)?"":value),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:cnames,style,children:[prepend&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"viking-input-group-prepend",children:prepend}),icon&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"icon-wrapper",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_Icon_icon__WEBPACK_IMPORTED_MODULE_3__.A,{icon,title:`title-${icon}`})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{ref,className:"viking-input-inner",disabled,...restProps}),append&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"viking-input-group-append",children:append})]})}),__WEBPACK_DEFAULT_EXPORT__=Input;Input.__docgenInfo={description:"Input 输入框 通过鼠标或键盘输入内容，是最基础的表单域的包装。\n\n~~~js\n// 这样引用\nimport { Input } from 'vikingship'\n~~~\n\n支持 HTMLInput 的所有基本属性",methods:[],displayName:"Input",props:{disabled:{required:!1,tsType:{name:"boolean"},description:""},size:{required:!1,tsType:{name:"union",raw:"'lg' | 'sm'",elements:[{name:"literal",value:"'lg'"},{name:"literal",value:"'sm'"}]},description:""},icon:{required:!1,tsType:{name:"IconProp"},description:""},prepend:{required:!1,tsType:{name:"union",raw:"string | ReactElement",elements:[{name:"string"},{name:"ReactElement"}]},description:""},append:{required:!1,tsType:{name:"union",raw:"string | ReactElement",elements:[{name:"string"},{name:"ReactElement"}]},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ChangeEvent",elements:[{name:"HTMLInputElement"}],raw:"ChangeEvent<HTMLInputElement>"},name:"e"}],return:{name:"void"}}},description:""}},composes:["Omit"]}},"./src/components/Transition/transition.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react_transition_group__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react-transition-group/esm/CSSTransition.js"));const Transition=props=>{const{children,classNames,animation,wrapper,...restProps}=props;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_transition_group__WEBPACK_IMPORTED_MODULE_2__.A,{classNames:classNames||animation,...restProps,children:wrapper?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children}):children})};Transition.defaultProps={unmountOnExit:!0,appear:!0};const __WEBPACK_DEFAULT_EXPORT__=Transition;Transition.__docgenInfo={description:"",methods:[],displayName:"Transition",props:{animation:{required:!1,tsType:{name:"union",raw:"| 'zoom-in-top'\n| 'zoom-in-left'\n| 'zoom-in-bottom'\n| 'zoom-in-right'",elements:[{name:"literal",value:"'zoom-in-top'"},{name:"literal",value:"'zoom-in-left'"},{name:"literal",value:"'zoom-in-bottom'"},{name:"literal",value:"'zoom-in-right'"}]},description:""},wrapper:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!1,tsType:{name:"ReactNode"},description:""},unmountOnExit:{defaultValue:{value:"true",computed:!1},required:!1},appear:{defaultValue:{value:"true",computed:!1},required:!1}}}},"./src/hooks/useClickOutside.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=function useClickOutside(ref,handler){(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const listener=event=>{ref.current&&!ref.current.contains(event.target)&&handler(event)};return document.addEventListener("click",listener),()=>{document.removeEventListener("click",listener)}},[ref,handler])}}}]);